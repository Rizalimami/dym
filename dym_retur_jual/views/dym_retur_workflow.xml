<?xml version="1.0" encoding="utf-8"?>
<openerp>
    <data>

        <record id="retur_jual" model="workflow">
            <field name="name">Retur Penjualan Basic Workflow</field>
            <field name="osv">dym.retur.jual</field>
            <field name="on_create">True</field>
        </record>

        <record id="act_draft" model="workflow.activity">
            <field name="wkf_id" ref="retur_jual"/>
            <field name="flow_start">True</field>
            <field name="name">draft</field>
        </record>
        <record id="act_confirmed" model="workflow.activity">
            <field name="wkf_id" ref="retur_jual"/>
            <field name="name">confirmed</field>
            <field name="split_mode">OR</field>
            <field name="kind">function</field>
            <field name="action">wkf_confirm_retur()</field>
        </record>

        <!-- Picking  -->
        <record id="act_picking" model="workflow.activity">
            <field name="wkf_id" ref="retur_jual"/>
             <field name="name">picking</field>
             <field name="kind">function</field>
             <field name="action">action_picking_create()</field>
        </record>
               
        <record id="act_picking_done" model="workflow.activity">
            <field name="wkf_id" ref="retur_jual"/>
             <field name="name">picking_done</field>
             <field name="action">picking_done()</field>
             <field name="kind">function</field>
        </record>  
        <record id="act_except_picking" model="workflow.activity">
            <field name="wkf_id" ref="retur_jual"/>
            <field name="name">except_picking</field>
            <field name="kind">function</field>
            <field name="action">write({'state':'except_picking'})</field>
        </record>
        <!-- Picking -->

        <record id="act_cancel" model="workflow.activity">
            <field name="wkf_id" ref="retur_jual"/>
            <field name="name">cancel</field>
            <field name="kind">function</field>
            <field name="flow_stop">True</field>
            <field name="action">wkf_action_cancel()</field>
        </record>
        <record id="act_except_invoice" model="workflow.activity">
            <field name="wkf_id" ref="retur_jual"/>
            <field name="name">except_invoice</field>
           <field name="kind">function</field>
            <field name="action">write({'state':'except_invoice'})</field>
        </record>
        <record id="act_router" model="workflow.activity">
            <field name="wkf_id" ref="retur_jual"/>
            <field name="name">router</field>
            <field name="split_mode">OR</field>
            <field name="kind">function</field>
            <field name="join_mode">AND</field>
            <field name="action">wkf_approve_retur()</field>
        </record>
        <record id="act_invoice" model="workflow.activity">
            <field name="wkf_id" ref="retur_jual"/>
            <field name="name">invoice</field>
            <field name="kind">subflow</field>
            <field name="subflow_id" search="[('osv','=','account.invoice')]"/>
            <field name="action">action_invoice_create()</field>
        </record>
        <record id="act_invoice_done" model="workflow.activity">
            <field name="wkf_id" ref="retur_jual"/>
            <field name="name">invoice_done</field>
            <field name="action">invoice_done()</field>
            <field name="kind">function</field>
        </record>
        <record id="act_invoice_end" model="workflow.activity">
            <field name="wkf_id" ref="retur_jual"/>
            <field name="name">invoice_end</field>
        </record>
        <record id="act_done" model="workflow.activity">
            <field name="wkf_id" ref="retur_jual"/>
            <field name="name">done</field>
            <field name="action">wkf_retur_done()</field>
            <field name="kind">function</field>
            <field name="flow_stop">True</field>
            <field name="join_mode">AND</field>
        </record>
        
        <record id="trans_confirmed_cancel" model="workflow.transition">
            <field name="act_from" ref="act_confirmed"/>
            <field name="act_to" ref="act_cancel"/>
            <field name="signal">retur_cancel</field>
        </record>
        <record id="trans_draft_cancel" model="workflow.transition">
            <field name="act_from" ref="act_draft"/>
            <field name="act_to" ref="act_cancel"/>
            <field name="signal">retur_cancel</field>
        </record>
        <record id="trans_confirmed_router" model="workflow.transition">
            <field name="act_from" ref="act_confirmed"/>
            <field name="act_to" ref="act_router"/>
        </record>
        <!-- picking -->

        <record id="trans_router_picking" model="workflow.transition">
            <field name="act_from" ref="act_router"/>
             <field name="act_to" ref="act_picking"/>
             <field name="condition">has_retur_good()</field>
        </record>
        <record id="trans_router_picking_done" model="workflow.transition">
             <field name="act_from" ref="act_router"/>
             <field name="act_to" ref="act_picking_done"/>
             <field name="condition">not has_retur_good()</field>
        </record>
        <!-- picking -->
        <record id="trans_router_invoice_done" model="workflow.transition">
             <field name="act_from" ref="act_router"/>
             <field name="act_to" ref="act_invoice_done"/>
             <field name="condition">retur_type=='Barang'</field>
        </record>
        <record id="trans_router_invoice" model="workflow.transition">
            <field name="act_from" ref="act_router"/>
            <field name="act_to" ref="act_invoice"/>
            <field name="condition">retur_type in ('Uang','Admin')</field>
        </record>

       <record id="trans_except_invoice_invoice_done" model="workflow.transition">
            <field name="act_from" ref="act_except_invoice"/>
           <field name="act_to" ref="act_invoice_done"/>
            <field name="signal">invoice_ok</field>
       </record>
        <record id="trans_except_invoice" model="workflow.transition">
            <field name="act_from" ref="act_except_invoice"/>
           <field name="act_to" ref="act_cancel"/>
           <field name="signal">retur_cancel</field>
        </record>
       <record id="trans_invoice_except_invoice" model="workflow.transition">
           <field name="act_from" ref="act_invoice"/>
           <field name="act_to" ref="act_except_invoice"/>
           <field name="signal">subflow.cancel</field>
       </record>
        <record id="trans_invoice_invoice_done" model="workflow.transition">
            <field name="act_from" ref="act_invoice"/>
            <field name="act_to" ref="act_invoice_done"/>
            <field name="signal">subflow.paid</field>
        </record>
        <record id="trans_invoice_done_done" model="workflow.transition">
            <field name="act_from" ref="act_invoice_done"/>
            <field name="act_to" ref="act_invoice_end"/>
        </record>
        <record id="trans_invoice_end_done" model="workflow.transition">
            <field name="act_from" ref="act_invoice_end"/>
            <field name="act_to" ref="act_done"/>
            <field name="condition">invoiced</field>
        </record>

        <!-- picking -->
        <record id="trans_act_picking_done_to_act_finished" model="workflow.transition">
              <field name="act_from" ref="act_picking_done"/>
              <field name="act_to" ref="act_done"/>
        </record>
        
        <record id="trans_except_picking_picking_done" model="workflow.transition">
            <field name="act_from" ref="act_except_picking"/>
            <field name="act_to" ref="act_picking_done"/>
            <field name="signal">picking_ok</field>
        </record>
        
        <record id="trans_picking_to_except_picking" model="workflow.transition">
            <field name="act_from" ref="act_picking"/>
            <field name="act_to" ref="act_except_picking"/>
            <field name="signal">picking_cancel</field>
        </record>
        
        <record id="trans_except_picking" model="workflow.transition">
            <field name="act_from" ref="act_except_picking"/>
            <field name="act_to" ref="act_cancel"/>
            <field name="signal">retur_cancel</field>
        </record>

        <record id="trans_picking_picking_done" model="workflow.transition">
            <field name="act_from" ref="act_picking"/>
            <field name="act_to" ref="act_picking_done"/>
            <field name="signal">picking_done</field>
            
        </record>
        <!-- picking -->
    </data>
</openerp>
